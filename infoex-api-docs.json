{
    "openapi": "3.1.0",
    "info": {
        "title": "InfoEx Submission API",
        "description": "This API allows subscribers to submit observations directly to the InfoEx from their own system.\n\n## Authentication\n\nAll API calls require authentication using the API Key provided by the InfoEx.\nThe following headers must be provided on all calls:\n\n- api_key - The api key provided by the InfoEx\n- operation - The UUID of the operation\n\nExample:\n\n```\ncurl -H \"api_key: <api_key>\" -H \"operation: <operation_uuid>\" https://staging-can.infoex.ca/safe-server/constants\n```\n\n## Observations\n\nThe InfoEx supports many different types of Observations and each of them have their own endpoints for submitting.\nThere are a common set of parameters that all observations require; Observation Date & Time, Submission State (`IN_REVIEW` `SUBMITTED`), Location and Attachments.\n\n### Attachments\n\nAttachments can be associated with any Observation, they are uploaded via the File Upload `/attachment/V2/upload` endpoint. See [/attachment/V2/upload](#tag/File-Upload/operation/upload)\n\n### Locations\n\nLocations (Operation Area, Operating Zone, Forecast Zone, Avalanche Path, Ski Run etc) are required for every observation and must have already been stored in the operation\u2019s Location Catalog. They are associated with Observations by their UUID.\n",
        "version": "v1"
    },
    "servers": [
        {
            "url": "/safe-server"
        }
    ],
    "security": [
        {
            "APIKey": [],
            "Operation": []
        }
    ],
    "tags": [
        {
            "name": "File Upload",
            "description": "Uploading files to the InfoEx"
        },
        {
            "name": "Hazard Assessment",
            "description": "Submitting Hazard Assessments"
        },
        {
            "name": "Location",
            "description": "Location management"
        },
        {
            "name": "Ob - Avalanche (OGRS)",
            "description": "Submitting Avalanche Observations (OGRS)"
        },
        {
            "name": "Ob - Avalanche (SWAG)",
            "description": "Submitting Avalanche Observations (SWAG)"
        },
        {
            "name": "Ob - Avalanche Summary",
            "description": "Submitting Avalanche Summaries"
        },
        {
            "name": "Ob - Constants",
            "description": "Get Observation Constants"
        },
        {
            "name": "Ob - Control Planning",
            "description": "Submitting Control Planning Observations"
        },
        {
            "name": "Ob - Field Summary (OGRS)",
            "description": "Submitting Field Summaries"
        },
        {
            "name": "Ob - Field Summary (SWAG)",
            "description": "Submitting Field Summaries (SWAG)"
        },
        {
            "name": "Ob - Freeform",
            "description": "Submitting Freeform Observations"
        },
        {
            "name": "Ob - General Message",
            "description": "Submitting General Messages"
        },
        {
            "name": "Ob - Hazard Assessment",
            "description": "Submitting Hazard Assessments"
        },
        {
            "name": "Ob - Snowpack",
            "description": "Submitting Snowpack Observations"
        },
        {
            "name": "Ob - Snowpack Assessment",
            "description": "Submitting Snowpack Assessments"
        },
        {
            "name": "Ob - Terrain",
            "description": "Submitting Terrain Observations"
        },
        {
            "name": "Ob - Weather (Auto Station)",
            "description": "Submitting Auto Station Weather Observations"
        },
        {
            "name": "Ob - Weather (OGRS)",
            "description": "Submitting Weather Observations (OGRS)"
        },
        {
            "name": "Ob - Weather (SWAG)",
            "description": "Submitting Weather Observations (SWAG)"
        },
        {
            "name": "PWL",
            "description": "PWL management"
        },
        {
            "name": "Workflow",
            "description": "Workflow operations"
        }
    ],
    "paths": {
        "/workflow/execution": {
            "put": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/execution",
                "description": "Submit a Workflow Execution",
                "operationId": "postExecution_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowExecutionDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowExecutionDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/execution",
                "description": "Submit a Workflow Execution",
                "operationId": "postExecution",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowExecutionDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowExecutionDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow/executionAggregate": {
            "put": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/executionAggregate",
                "description": "Submit a Workflow Execution Aggregate",
                "operationId": "postExecution_3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowExecutionAggregateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowExecutionAggregateDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/executionAggregate",
                "description": "Submit a Workflow Execution Aggregate",
                "operationId": "postExecution_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowExecutionAggregateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowExecutionAggregateDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow/context": {
            "put": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/context",
                "description": "Submit a Workflow Context",
                "operationId": "postContext_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssessmentContextDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssessmentContextDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "/workflow/context",
                "description": "Submit a Workflow Context",
                "operationId": "postContext",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssessmentContextDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssessmentContextDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location",
                "description": "Get locations by operation and type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "operationUUID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "/location",
                "description": "Create or update a location",
                "operationId": "post_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "/location",
                "description": "Create or update a location",
                "operationId": "post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pwl": {
            "post": {
                "tags": [
                    "PWL"
                ],
                "summary": "/pwl",
                "description": "Submit a PWL",
                "operationId": "post_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PWLDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PWLDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/weather": {
            "post": {
                "tags": [
                    "Ob - Weather (OGRS)"
                ],
                "summary": "/observation/weather",
                "description": "Submit a Weather Observation",
                "operationId": "post_3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WeatherObservationLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WeatherObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/weather/autostation": {
            "post": {
                "tags": [
                    "Ob - Weather (Auto Station)"
                ],
                "summary": "/observation/weather/autostation",
                "description": "Submit a Auto Weather Observation",
                "operationId": "post_4",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoStationWeatherObservationDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/observation/terrain": {
            "post": {
                "tags": [
                    "Ob - Terrain"
                ],
                "summary": "/observation/terrain",
                "description": "Submit a Terrain Observation",
                "operationId": "post_5",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TerrainObservationLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TerrainObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/swagWeather": {
            "post": {
                "tags": [
                    "Ob - Weather (SWAG)"
                ],
                "summary": "/observation/swagWeather",
                "description": "Submit a SWAG Weather Observation",
                "operationId": "post_6",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwagWeatherObservationLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwagWeatherObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/swagFieldSummary": {
            "post": {
                "tags": [
                    "Ob - Field Summary (SWAG)"
                ],
                "summary": "/observation/swagFieldSummary",
                "description": "Submit a SWAG Field Summary Observation",
                "operationId": "post_7",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwagFieldSummaryLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwagFieldSummaryLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/swagAvalanche": {
            "post": {
                "tags": [
                    "Ob - Avalanche (SWAG)"
                ],
                "summary": "/observation/swagAvalanche",
                "description": "Create a new SWAG avalanche observation",
                "operationId": "post_8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwagAvalancheObservationLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwagAvalancheObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/snowpack": {
            "post": {
                "tags": [
                    "Ob - Snowpack"
                ],
                "summary": "/observation/snowpack",
                "description": "Submit a Snowpack Observation",
                "operationId": "post_9",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SnowpackObservationLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnowpackObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/snowpackAssessment": {
            "post": {
                "tags": [
                    "Ob - Snowpack Assessment"
                ],
                "summary": "/observation/snowpackAssessment",
                "description": "Submit a Snowpack Assessment Observation",
                "operationId": "post_10",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SnowpackAssessmentLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnowpackAssessmentLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/hazardAssessment": {
            "post": {
                "tags": [
                    "Ob - Hazard Assessment"
                ],
                "summary": "/observation/hazardAssessment",
                "description": "Submit a Hazard Assessment",
                "operationId": "post_11",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HazardAssessmentDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HazardAssessmentDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/generalMessage": {
            "post": {
                "tags": [
                    "Ob - General Message"
                ],
                "summary": "/observation/generalMessage",
                "description": "Submit a General Message Observation",
                "operationId": "post_12",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneralMessageLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneralMessageLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/freeform": {
            "post": {
                "tags": [
                    "Ob - Freeform"
                ],
                "summary": "/observation/freeform",
                "description": "Submit a Freeform Observation",
                "operationId": "post_13",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FreeformLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FreeformLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/fieldSummary": {
            "post": {
                "tags": [
                    "Ob - Field Summary (OGRS)"
                ],
                "summary": "/observation/fieldSummary",
                "description": "Submit a Field Summary Observation",
                "operationId": "post_14",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldSummaryLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldSummaryLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/controlPlanning": {
            "post": {
                "tags": [
                    "Ob - Control Planning"
                ],
                "summary": "/observation/controlPlanning",
                "description": "Submit a Control Planning Observation",
                "operationId": "post_15",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteControlLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RouteControlLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/avalanche": {
            "post": {
                "tags": [
                    "Ob - Avalanche (OGRS)"
                ],
                "summary": "/observation/avalanche",
                "description": "Create a new avalanche observation",
                "operationId": "post_16",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvalancheObservationLightDTO"
                            },
                            "examples": {
                                "Avalanche Observation Example": {
                                    "description": "Avalanche Observation Example",
                                    "value": {
                                        "obDate": "01/30/2021",
                                        "obTime": "13:01",
                                        "num": "1",
                                        "trigger": "Na",
                                        "character": "LOOSE_DRY_AVALANCHE",
                                        "locationUUIDs": [
                                            "5b4ccd09-0910-420a-823a-d3b64c46666e"
                                        ],
                                        "sizeMin": "1",
                                        "occurrenceTime": "The avalanche was observed in motion on the observation date and time",
                                        "occurrenceTimezone": "America/Vancouver",
                                        "state": "SUBMITTED"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvalancheObservationLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/avalancheSummary": {
            "post": {
                "tags": [
                    "Ob - Avalanche Summary"
                ],
                "summary": "/observation/avalancheSummary",
                "description": "Submit an Avalanche Summary Observation",
                "operationId": "post_17",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvalancheSummaryLightDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvalancheSummaryLightDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location/uploadPhoto": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/uploadPhoto",
                "description": "Upload a photo",
                "operationId": "attachment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location/restore/{uuid}": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/restore",
                "description": "Restore a location",
                "operationId": "restore",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/location/centroid": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/centroid",
                "description": "Get centroid for locations",
                "operationId": "getCentroids",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationGeometryDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/hazardAssessment": {
            "post": {
                "tags": [
                    "Hazard Assessment"
                ],
                "summary": "DEPRECATED - Use /hazardAssessmentObservation/direct instead",
                "description": "Submit a Hazard Assessment - DEPRECATED: This endpoint will be removed. Please migrate to saveForObservationDirect",
                "operationId": "post_18",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HazardAssessmentDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/attachment/{uuid}": {
            "post": {
                "tags": [
                    "File Upload"
                ],
                "summary": "/{uuid}",
                "operationId": "getAttachment",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": true
            }
        },
        "/attachment/upload": {
            "post": {
                "tags": [
                    "File Upload"
                ],
                "summary": "/upload",
                "operationId": "attachment_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/attachment/V2/upload": {
            "post": {
                "tags": [
                    "File Upload"
                ],
                "summary": "/V2/upload",
                "operationId": "upload",
                "parameters": [
                    {
                        "name": "UUID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prettySize",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "isOverlay",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "overlayUUID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pwl/operation": {
            "get": {
                "tags": [
                    "PWL"
                ],
                "summary": "/pwl/operation",
                "description": "Get all PWLs for an operation",
                "operationId": "getAllForOperation",
                "parameters": [
                    {
                        "name": "operationUUID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PWLDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/weather/autostation/{operationUUID}/observations/{locationUUID}": {
            "get": {
                "tags": [
                    "Ob - Weather (Auto Station)"
                ],
                "operationId": "getObservations",
                "parameters": [
                    {
                        "name": "operationUUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationUUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AutoStationWeatherObservationDTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/weather/autostation/{operationUUID}/defaults/{locationUUID}": {
            "get": {
                "tags": [
                    "Ob - Weather (Auto Station)"
                ],
                "operationId": "getDefaults",
                "parameters": [
                    {
                        "name": "operationUUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationUUID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "obDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "obTime",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwagWeatherObservationDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/weather/autostation/authorizedForFTP": {
            "get": {
                "tags": [
                    "Ob - Weather (Auto Station)"
                ],
                "operationId": "get_1",
                "parameters": [
                    {
                        "name": "operation",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FTPAccessDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observation/constants/": {
            "get": {
                "tags": [
                    "Ob - Constants"
                ],
                "summary": "/observation/constants",
                "description": "Get Observation Constants",
                "operationId": "getConstants",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstantsDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location/operationsKML": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/operationsKML",
                "description": "Get KML for all operations",
                "operationId": "getOperationKML",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/location/operationsGeoJSON": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/operationsGeoJSON",
                "description": "Get GeoJSON for all operations",
                "operationId": "getOperationGeoJSON",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/location/locationsKML": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/locationsKML",
                "description": "Get KML for locations",
                "operationId": "getLocationsKML",
                "parameters": [
                    {
                        "name": "locationUUIDs",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/location/locationsGeoJSON": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/locationsGeoJSON",
                "description": "Get GeoJSON for locations",
                "operationId": "getLocationsGeoJSON",
                "parameters": [
                    {
                        "name": "locationUUIDs",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/location/hierarchy/{uuid}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "/location/hierarchy",
                "description": "Get location hierarchy",
                "operationId": "getHierarchy",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationHierarchyDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachment/V2/{uuid}": {
            "get": {
                "tags": [
                    "File Upload"
                ],
                "summary": "/V2/{uuid}",
                "operationId": "getAttachmentV2",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/SafeError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ValidationErrors"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SafeError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ValidationError": {
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string",
                        "enum": [
                            "REQUIRED",
                            "INVALID_TYPE",
                            "INVALID_FORMAT",
                            "NOT_FOUND",
                            "JSON"
                        ]
                    },
                    "errorDetails": {
                        "type": "string"
                    }
                }
            },
            "ValidationErrors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "xml": {
                            "wrapped": true
                        }
                    }
                }
            },
            "SafeError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "OperationDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "abbreviation": {
                        "type": "string"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "ogrsReports": {
                        "type": "boolean"
                    },
                    "swagReports": {
                        "type": "boolean"
                    },
                    "swagEntry": {
                        "type": "boolean"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "profileRestriction": {
                        "type": "boolean"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subscriptionExpDate": {
                        "type": "string"
                    },
                    "subscriptionStatus": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "WorkflowExecutionDTO": {
                "type": "object",
                "properties": {
                    "submittedOn": {
                        "type": "string"
                    },
                    "workflowUUID": {
                        "type": "string"
                    },
                    "submittedByUUID": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "steps": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "AddHazardAssessmentAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "locationUUIDs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "operationUUID": {
                                "type": "string"
                            },
                            "obDate": {
                                "type": "string"
                            },
                            "obTime": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "shareLevel": {
                                "type": "string"
                            },
                            "assessmentType": {
                                "type": "string"
                            },
                            "usersPresent": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "avalancheProblems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AvalancheProblemDTO"
                                }
                            },
                            "hazardRatings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HazardRatingDTO"
                                }
                            },
                            "problemImportanceMap": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "uuid": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "AssessmentContextAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "character": {
                                "type": "string"
                            },
                            "assessmentDate": {
                                "type": "string"
                            },
                            "assessmentTime": {
                                "type": "string"
                            },
                            "validityDate": {
                                "type": "string"
                            },
                            "validityTime": {
                                "type": "string"
                            },
                            "usersPresent": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "workflowExecutionUUID": {
                                "type": "string"
                            },
                            "uuid": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "MimeType of the attachment",
                        "example": "image/jpeg"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the attachment",
                        "example": "image.jpg"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the attachment in bytes",
                        "example": 617021
                    },
                    "prettySize": {
                        "type": "string",
                        "description": "The size of the attachment in a human readable format",
                        "example": 602.56
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the attachment",
                        "enum": [
                            "server",
                            "pending"
                        ]
                    },
                    "overlayUUID": {
                        "type": "string",
                        "description": "UUID of the overlay attachment",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "overlay": {
                        "type": "boolean"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the attachment",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "name",
                    "type",
                    "uuid"
                ]
            },
            "AvalancheObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "photoOverlays": {
                        "type": "array",
                        "description": "Photo Overlays associated with the avalanche observation",
                        "items": {
                            "$ref": "#/components/schemas/PhotoOverlayDTO"
                        },
                        "uniqueItems": true
                    },
                    "blasterOfRecord": {
                        "type": "string",
                        "description": "Blaster of Record User UUID",
                        "example": "350dd41b-c2e0-44ec-9194-0328f46206e0"
                    },
                    "blasterOfRecordString": {
                        "type": "string",
                        "description": "Blaster of Record Full Name (read-only)",
                        "example": "John Doe",
                        "readOnly": true
                    },
                    "shotLocation": {
                        "type": "string",
                        "description": "Shot Location description",
                        "enum": [
                            "B",
                            "M",
                            "T",
                            "U"
                        ]
                    },
                    "routeControl": {
                        "type": "boolean",
                        "description": "If this is an Avalanche Control observation. Used primarily by InfoEx client."
                    },
                    "controlRouteUUID": {
                        "type": "string",
                        "description": "If this is an Avalanche Control observation, the uuid of the control route. Used primarily by InfoEx client."
                    },
                    "occurrenceTime": {
                        "type": "string",
                        "description": "Occurrence Time",
                        "enum": [
                            "Observed",
                            "The avalanche was observed in motion on the observation date and time",
                            "The avalanche occurred in the 12 hours before the observation date and time",
                            "The avalanche occurred between 12 and 24 hours before the observation date and time",
                            "The avalanche occurred between 24 and 48 hours before the observation date and time",
                            "The avalanche occurred between 48 and 72 hours before the observation date and time",
                            "The avalanche occurred more than 72 hours before the observation date and time"
                        ]
                    },
                    "occurrenceTimezone": {
                        "type": "string",
                        "description": "TimeZone of occurrence",
                        "example": "America/Edmonton"
                    },
                    "occurrenceFromDateTime": {
                        "type": "string",
                        "description": "Ocurrence Time Range Start - format MM/dd/yyyy HH:mm:ss",
                        "example": "01/30/2021 13:00:00"
                    },
                    "occurrenceToDateTime": {
                        "type": "string",
                        "description": "Ocurrence Time Range End - format MM/dd/yyyy HH:mm:ss",
                        "example": "01/30/2021 13:05:00"
                    },
                    "explosivesCharges": {
                        "type": "array",
                        "description": "Explosives Charges used",
                        "items": {
                            "$ref": "#/components/schemas/ExplosivesChargeDto"
                        }
                    },
                    "shotPlacement": {
                        "type": "string",
                        "description": "UUID of Shot Placement location that is referenced in the location catalog"
                    },
                    "exactLocations": {
                        "description": "A point or polygon Geometry providing the exact location of the avalanche",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "obTime": {
                        "type": "string",
                        "description": "The time of the observation (24hr)",
                        "example": "13:00"
                    },
                    "num": {
                        "type": "string",
                        "description": "Number of avalanches",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "20",
                            "50",
                            "100",
                            "Iso",
                            "Sev",
                            "Num",
                            "NR",
                            "Unknown"
                        ]
                    },
                    "sizeMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum size of the avalanche",
                        "example": 1.0
                    },
                    "sizeMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum size of the avalanche",
                        "example": 3.0
                    },
                    "waterContentStartingZone": {
                        "type": "string",
                        "description": "The water content of the avalanche at the starting zone",
                        "enum": [
                            "D",
                            "M",
                            "W",
                            "U"
                        ]
                    },
                    "waterContentDeposit": {
                        "type": "string",
                        "description": "The water content of the avalanche",
                        "enum": [
                            "D",
                            "M",
                            "W",
                            "U"
                        ]
                    },
                    "trigger": {
                        "type": "string",
                        "description": "Trigger, one of the following values:\n- `Na`: Natural\n- `Nc`: Natural Cornice Fall\n- `Ne`: Natural Earthquakes\n- `Ni`: Natural Ice fall\n- `Nr`: Natural Rock Fall\n- `Xa`: Explosives - Artillery\n- `Xb`: Explosives - Case (bag) charge\n- `Xc`: Explosives - Cornice\n- `Xd`: Explosives - Heli deployed gas exploder\n- `Xe`: Explosives - Hand-thrown or hand-placed\n- `Xg`: Explosives - Gas\n- `Xh`: Explosives - Heli bomb\n- `Xhg`: Explosives - Heli gas device\n- `Xl`: Explosives - Avalauncher\n- `Xp`: Explosives - Pre-placed remotely detonated\n- `Xt`: Explosives - Tram or ropeway delivery\n- `Xr`: Explosives - Remote avalanche ocurring at some distance from an explosion\n- `Xy`: Explosives - Avalanche occurring in sympathy with one released by explosives\n- `Ha`: Heli - accidental on landing or on approach \n- `Hc`: Heli - controlled (i.e deliberate landing on top of slope, etc.)\n- `Hr`: Heli - Remote avalanche occurring at some distance from heli landing\n- `Hy`: Heli - Avalanche occurring in sympathy with one released by a helicopter\n- `Va`: Vehicle - accidental\n- `Vc`: Vehicle - controlled\n- `Vr`: Vehicle - Remote avalanche occurring at some distance from vehicle\n- `Vy`: Vehicle - Avalanche occurring in sympathy with one released by a vehicle\n- `Sa`: Skier - Person (skier, snowboarder, hiker, climber) accidentental\n- `Sc`: Skier - controlled\n- `Sr`: Skier - Remote avalanche occurring at some distance from a person\n- `Sy`: Skier - Avalanche occurring in sympathy with one released by a person\n- `Ma`: Snowmobile - accidental\n- `Mc`: Snowmobile - controlled\n- `Mr`: Snowmobile - Remote avalanche occurring at some distance from a snowmobile\n- `My`: Snowmobile - Avalanche occurring in sympathy with one released by a snowmobile\n- `O`: Other\n- `U`: Unknown",
                        "enum": [
                            "Na",
                            "Nc",
                            "Ne",
                            "Ni",
                            "Nr",
                            "Xa",
                            "Xc",
                            "Xb",
                            "Xe",
                            "Xg",
                            "Xh",
                            "Xhg",
                            "Xl",
                            "Xp",
                            "Xt",
                            "Xr",
                            "Xy",
                            "Ha",
                            "Hc",
                            "Hr",
                            "Hy",
                            "Va",
                            "Vc",
                            "Vr",
                            "Vy",
                            "Sa",
                            "Sc",
                            "Sr",
                            "Sy",
                            "Ma",
                            "Mc",
                            "Mr",
                            "My",
                            "O",
                            "U"
                        ]
                    },
                    "triggerDistance": {
                        "type": "number",
                        "format": "double",
                        "description": "The trigger distance (meters)",
                        "example": 100
                    },
                    "character": {
                        "type": "string",
                        "description": "The character of the avalanche:\n- `LOOSE_DRY_AVALANCHE`: Dry Loose\n- `LOOSE_WET_AVALANCHE`: Wet Loose\n- `STORM_SLAB`: Storm Slab\n- `WIND_SLAB`: Wind Slab\n- `PERSISTENT_SLAB`: Persistent Slab\n- `DEEP_PERSISTENT_SLAB`: Deep Persistent Slab\n- `WET_SLAB`: Wet Slab\n- `GLIDE`: Glide Slab\n- `CORNICE`: Cornice\n- `UNKNOWN`: Unknown",
                        "enum": [
                            "LOOSE_DRY_AVALANCHE",
                            "LOOSE_WET_AVALANCHE",
                            "STORM_SLAB",
                            "WIND_SLAB",
                            "PERSISTENT_SLAB",
                            "DEEP_PERSISTENT_SLAB",
                            "WET_SLAB",
                            "GLIDE",
                            "CORNICE",
                            "UNKNOWN"
                        ]
                    },
                    "pwlName": {
                        "type": "string",
                        "description": "The names of the Persistent Weak Layer",
                        "example": "Halloween Crust",
                        "readOnly": true
                    },
                    "aspectFrom": {
                        "type": "string",
                        "description": "Aspect of starting zone. Keyword, 1 or a combination of the 8 cardinal points of the compass; a from\u2026to range is read in a clockwise direction",
                        "enum": [
                            "N",
                            "NE",
                            "E",
                            "SE",
                            "S",
                            "SW",
                            "W",
                            "NW",
                            "VAR",
                            "ALL"
                        ]
                    },
                    "aspectTo": {
                        "type": "string",
                        "description": "Aspect of starting zone. Keyword, 1 or a combination of the 8 cardinal points of the compass; a from\u2026to range is read in a clockwise direction",
                        "enum": [
                            "N",
                            "NE",
                            "E",
                            "SE",
                            "S",
                            "SW",
                            "W",
                            "NW",
                            "VAR",
                            "ALL"
                        ]
                    },
                    "elevationMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum elevation of the start zone of the avalanche(s) (meters)",
                        "example": 1000
                    },
                    "elevationMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum elevation of the start zone of the avalanche(s) (meters)",
                        "example": 2000
                    },
                    "elevationAvg": {
                        "type": "number",
                        "format": "double",
                        "description": "The average elevation of the start zone of the avalanche(s) (meters)",
                        "example": 1500
                    },
                    "inclineMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum incline of the starting zone in degrees",
                        "example": 35
                    },
                    "inclineMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum incline of the starting zone in degrees",
                        "example": 45
                    },
                    "inclineAvg": {
                        "type": "number",
                        "format": "double",
                        "description": "The average incline of the starting zone in degrees",
                        "example": 40
                    },
                    "width": {
                        "type": "number",
                        "format": "double",
                        "description": "The width of the avalanche (meters)",
                        "example": 10
                    },
                    "widthAvg": {
                        "type": "number",
                        "format": "double",
                        "description": "The average width of the avalanche (meters)",
                        "example": 10
                    },
                    "depthMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum slab height (cm)",
                        "example": 30
                    },
                    "depthMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum slab height (cm)",
                        "example": 40
                    },
                    "depthAvg": {
                        "type": "number",
                        "format": "double",
                        "description": "The average slab height (cm)",
                        "example": 35
                    },
                    "depthEstimated": {
                        "type": "boolean",
                        "description": "If the depth of the avalanche was estimated",
                        "example": true
                    },
                    "length": {
                        "type": "number",
                        "format": "double",
                        "description": "The length of the avalanche (meters)",
                        "example": 100
                    },
                    "lengthAvg": {
                        "type": "number",
                        "format": "double",
                        "description": "The average length of the avalanche (meters)",
                        "example": 100
                    },
                    "lengthEstimated": {
                        "type": "boolean",
                        "description": "If the length of the avalanche was estimated",
                        "example": true
                    },
                    "grainForm": {
                        "type": "string",
                        "description": "The grain form of the failure plane",
                        "enum": [
                            "PP",
                            "PPco",
                            "PPnd",
                            "PPpl",
                            "PPsd",
                            "PPir",
                            "PPgp",
                            "PPhl",
                            "PPip",
                            "PPrm",
                            "MM",
                            "MMrp",
                            "MMci",
                            "DF",
                            "DFdc",
                            "DFbk",
                            "RG",
                            "RGsr",
                            "RGlr",
                            "RGwp",
                            "RGxf",
                            "FC",
                            "FCso",
                            "FCsf",
                            "FCxr",
                            "DH",
                            "DHcp",
                            "DHpr",
                            "DHch",
                            "DHla",
                            "DHxr",
                            "SH",
                            "SHsu",
                            "SHcv",
                            "SHxr",
                            "MF",
                            "MFsc",
                            "MFrc",
                            "MFtc",
                            "MFcl",
                            "MFpc",
                            "MFsl",
                            "MFcr",
                            "IF",
                            "IFil",
                            "IFic",
                            "IFbi",
                            "IFrc",
                            "IFsc",
                            "CR",
                            "WG",
                            "IM"
                        ]
                    },
                    "grainFormRimed": {
                        "type": "string",
                        "description": "If the grain form was rimed",
                        "example": true
                    },
                    "grainFormMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum grain form size (mm)",
                        "example": 1.0
                    },
                    "grainFormMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum grain form size (mm)",
                        "example": 1.0
                    },
                    "bedSurfaceLevel": {
                        "type": "string",
                        "description": "Bed surface level",
                        "enum": [
                            "S",
                            "O",
                            "G",
                            "U"
                        ]
                    },
                    "bedSurfaceType": {
                        "type": "string",
                        "description": "Bed surface type",
                        "enum": [
                            "PP",
                            "PPco",
                            "PPnd",
                            "PPpl",
                            "PPsd",
                            "PPir",
                            "PPgp",
                            "PPhl",
                            "PPip",
                            "PPrm",
                            "MM",
                            "MMrp",
                            "MMci",
                            "DF",
                            "DFdc",
                            "DFbk",
                            "RG",
                            "RGsr",
                            "RGlr",
                            "RGwp",
                            "RGxf",
                            "FC",
                            "FCso",
                            "FCsf",
                            "FCxr",
                            "DH",
                            "DHcp",
                            "DHpr",
                            "DHch",
                            "DHla",
                            "DHxr",
                            "SH",
                            "SHsu",
                            "SHcv",
                            "SHxr",
                            "MF",
                            "MFsc",
                            "MFrc",
                            "MFtc",
                            "MFcl",
                            "MFpc",
                            "MFsl",
                            "MFcr",
                            "IF",
                            "IFil",
                            "IFic",
                            "IFbi",
                            "IFrc",
                            "IFsc",
                            "CR",
                            "WG",
                            "IM"
                        ]
                    },
                    "bedSurfaceRimed": {
                        "type": "string",
                        "description": "If the bed surface was rimed",
                        "example": true
                    },
                    "bedSurfaceSizeMin": {
                        "type": "number",
                        "format": "double",
                        "description": "The minimum bed surface size in mm",
                        "example": 1.0
                    },
                    "bedSurfaceSizeMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum bed surface size in mm",
                        "example": 1.0
                    },
                    "snowFailureType": {
                        "type": "string",
                        "description": "The failure type",
                        "enum": [
                            "S",
                            "L",
                            "LS",
                            "C",
                            "CS",
                            "I",
                            "IS",
                            "GS",
                            "U"
                        ]
                    },
                    "ageRangeFrom": {
                        "type": "string",
                        "deprecated": true,
                        "description": "The range of age from the observation time",
                        "enum": [
                            "Directly observed",
                            "Between obs time",
                            "Between obs time -12hrs",
                            "Between obs time -24hrs",
                            "Between obs time -36hrs",
                            "Between obs time -48hrs",
                            "Between obs time -72hrs",
                            "Older than obs time -72 hrs"
                        ]
                    },
                    "ageRangeTo": {
                        "type": "string",
                        "deprecated": true,
                        "description": "The range of age to the observation time",
                        "enum": [
                            "and -12 hrs.",
                            "and -24 hrs.",
                            "and -36 hrs.",
                            "and -48 hrs.",
                            "and -72 hrs.",
                            "and -72+ hrs."
                        ]
                    },
                    "widthMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum width of the avalanche (meters)",
                        "example": 1.0
                    },
                    "lengthMax": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum length of the avalanche (meters)",
                        "example": 1.0
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments on the avalanche",
                        "example": "Very thin SSL in the immediate lee of ridge."
                    },
                    "numExplosiveCharges": {
                        "type": "number",
                        "format": "double",
                        "deprecated": true,
                        "description": "The number of explosive charges used",
                        "example": 1.0
                    },
                    "sizeOfCharges": {
                        "type": "number",
                        "format": "double",
                        "deprecated": true,
                        "description": "The size of the charges used (kg)",
                        "example": 1.0
                    },
                    "terminus": {
                        "type": "string",
                        "description": "The terminus of the avalanche",
                        "enum": [
                            "SZ",
                            "TK",
                            "TR",
                            "MR",
                            "BR",
                            "TP",
                            "MP",
                            "BP",
                            "U"
                        ]
                    },
                    "depositOnRoadRail": {
                        "type": "number",
                        "format": "double",
                        "description": "The deposit on road/rail (meters)",
                        "example": 100
                    },
                    "distanceToToeDepositedMass": {
                        "type": "number",
                        "format": "double",
                        "description": "The distance to toe (meters)",
                        "example": 100
                    },
                    "aspectElevation": {
                        "type": "string",
                        "description": "A JSON document representing different zones and their corresponding directions. The structure of the JSON is as follows: \n```\n{ \n   'Below Treeline': [...directions], \n  'Treeline': [...directions], \n  'Alpine': [...directions] \n} \n```\nEach key represents a zone and maps to an array of directions. \nValid directions include: \n- `N` (North) \n- `NE` (Northeast) \n- `E` (East) \n- `SE` (Southeast) \n- `S` (South) \n- `SW` (Southwest) \n- `W` (West) \n- `NW` (Northwest)",
                        "example": {
                            "'Below Treeline'": [
                                "N",
                                "W"
                            ],
                            "'Treeline'": [
                                "N"
                            ],
                            "'Alpine'": [
                                "N"
                            ]
                        }
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "description": "The list of location UUIDs associated with the avalanche.",
                        "example": [
                            "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "controlTeamUUIDs": {
                        "type": "array",
                        "description": "The list of control team UUIDs associated with the avalanche.",
                        "example": [
                            "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string",
                        "description": "The operation UUID associated with the avalanche.",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "ageRange": {
                        "type": "string",
                        "deprecated": true,
                        "description": "Summary of the age range: 'from - to' (read-only)",
                        "example": "48-72 hrs",
                        "readOnly": true
                    },
                    "size": {
                        "type": "string",
                        "description": "The size of the avalanche",
                        "enum": [
                            "1",
                            "1.5",
                            "2",
                            "2.5",
                            "3",
                            "3.5",
                            "4",
                            "4.5",
                            "5"
                        ]
                    },
                    "incline": {
                        "type": "string",
                        "description": "Summary of the incline range: 'min -(avg)- max' (read-only)",
                        "example": 10,
                        "readOnly": true
                    },
                    "aspect": {
                        "type": "string",
                        "description": "Summary of the aspect range:  'from - to' (read-only)",
                        "example": "N - NE",
                        "readOnly": true
                    },
                    "elevation": {
                        "type": "string",
                        "description": "Summary of the elevation band",
                        "readOnly": true
                    },
                    "depth": {
                        "type": "string",
                        "description": "Summary of the slab height:  'min -(avg)- max' (read-only)",
                        "example": 5,
                        "readOnly": true
                    },
                    "widthSummary": {
                        "type": "string",
                        "description": "Summary of the width range:  'width - max' (read-only)",
                        "example": 1,
                        "readOnly": true
                    },
                    "lengthSummary": {
                        "type": "string",
                        "description": "Summary of the length range:  'length - max' (read-only)",
                        "example": 100,
                        "readOnly": true
                    },
                    "bedSurface": {
                        "type": "string",
                        "description": "Summary of the bed surface: 'level:type (min-max)",
                        "example": "S:PPco\u1d63(0.5-2.0)",
                        "readOnly": true
                    },
                    "failurePlane": {
                        "type": "string",
                        "description": "Summary of the GrainForm crystal type, min/max size and rimed",
                        "readOnly": true
                    },
                    "controlTeamString": {
                        "type": "string",
                        "description": "Names of the control team members",
                        "example": "John Does, Jane Doe",
                        "readOnly": true
                    },
                    "occurrenceTimeAbbreviation": {
                        "type": "string",
                        "description": "Time Occurred (Abbreviated)",
                        "enum": [
                            "Observed",
                            "0-12 hrs",
                            "12-24 hrs",
                            "24-48 hrs",
                            "48-72 hrs",
                            "72+ hrs"
                        ],
                        "readOnly": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "pwlUUID": {
                        "type": "array",
                        "description": "The list of Persistent Weak Layer UUIDs associated with this avalanche",
                        "example": [
                            "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "character",
                    "locationUUIDs",
                    "num",
                    "obDate",
                    "obTime",
                    "state",
                    "trigger"
                ]
            },
            "AvalancheProblemDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "character": {
                        "type": "string"
                    },
                    "pwlUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "avalancheProblemPWLs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvalancheProblemPWLDTO"
                        }
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "sensitivity": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "hazardChart": {
                        "type": "string"
                    },
                    "colour": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "depthMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "depthMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "assessmentType": {
                        "type": "string"
                    },
                    "typicalSize": {
                        "type": "string",
                        "enum": [
                            "Size1",
                            "Size15",
                            "Size2",
                            "Size25",
                            "Size3",
                            "Size35",
                            "Size4",
                            "Size45",
                            "Size5"
                        ]
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "importance": {
                        "type": "string"
                    },
                    "locationGroupUUID": {
                        "type": "string"
                    },
                    "typicalDepth": {
                        "type": "string"
                    },
                    "pwlUUID": {
                        "type": "string",
                        "deprecated": true
                    },
                    "pwlName": {
                        "type": "string",
                        "deprecated": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "AvalancheProblemImportanceDTO": {
                "type": "object",
                "properties": {
                    "importance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "AvalancheProblemPWLDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pwlUUID": {
                        "type": "string"
                    }
                }
            },
            "AvalancheSummaryLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "percentAreaObserved": {
                        "type": "number",
                        "format": "double"
                    },
                    "explosivesRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExplosivesRecordDto"
                        }
                    },
                    "avalanchesObserved": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "ExplosivesChargeDto": {
                "type": "object",
                "properties": {
                    "numberOfExplosiveCharges": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of explosive charges",
                        "example": 1
                    },
                    "chargeSize": {
                        "type": "number",
                        "format": "double",
                        "description": "Charge size",
                        "example": 1.0
                    },
                    "chargeUnit": {
                        "type": "string",
                        "description": "Units of the charge",
                        "example": "KG"
                    },
                    "observationUUID": {
                        "type": "string",
                        "description": "UUID of the associated observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "chargeSummary": {
                        "type": "string",
                        "description": "Charge summary (calculated field, output only)",
                        "example": "avalanches: 3 shots (1.0 KG)",
                        "readOnly": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the explosive charge",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                }
            },
            "ExplosivesRecordDto": {
                "type": "object",
                "properties": {
                    "explosiveShots": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "explosiveResults": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargeSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "chargeUnit": {
                        "type": "string"
                    },
                    "explosiveSummary": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "FieldSummaryLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "obStartTime": {
                        "type": "string"
                    },
                    "obEndTime": {
                        "type": "string"
                    },
                    "tempHigh": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempLow": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "amSky": {
                        "type": "string"
                    },
                    "amVfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "amVfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "amPrecip": {
                        "type": "string"
                    },
                    "amSurfaceForm": {
                        "type": "string"
                    },
                    "amSurfaceRimed": {
                        "type": "string"
                    },
                    "amSurfaceAvgSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "amSurfaceMaxSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "amWindSpeed": {
                        "type": "string"
                    },
                    "amWindDirection": {
                        "type": "string"
                    },
                    "amSnowExtent": {
                        "type": "string"
                    },
                    "amSnowDirection": {
                        "type": "string"
                    },
                    "pmSky": {
                        "type": "string"
                    },
                    "pmVfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmVfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmPrecip": {
                        "type": "string"
                    },
                    "pmSurfaceForm": {
                        "type": "string"
                    },
                    "pmSurfaceRimed": {
                        "type": "string"
                    },
                    "pmSurfaceAvgSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmSurfaceMaxSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmWindSpeed": {
                        "type": "string"
                    },
                    "pmWindDirection": {
                        "type": "string"
                    },
                    "pmSnowExtent": {
                        "type": "string"
                    },
                    "pmSnowDirection": {
                        "type": "string"
                    },
                    "hn24": {
                        "type": "number",
                        "format": "double"
                    },
                    "we": {
                        "type": "number",
                        "format": "double"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "hst": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstClearedDate": {
                        "type": "string"
                    },
                    "hstClearedTime": {
                        "type": "string"
                    },
                    "hsComment": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "string"
                    },
                    "temp": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "snowExtent": {
                        "type": "string"
                    },
                    "snowDirection": {
                        "type": "string"
                    },
                    "surfaceForms": {
                        "type": "string"
                    },
                    "wind": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "FreeformAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "obDate": {
                                "type": "string",
                                "description": "Date of the Observation (yyyy/mm/dd)",
                                "example": "2021/01/30"
                            },
                            "attachments": {
                                "type": "array",
                                "description": "Files attached to the observation",
                                "items": {
                                    "$ref": "#/components/schemas/Attachment"
                                },
                                "uniqueItems": true
                            },
                            "state": {
                                "type": "string",
                                "description": "State of the observation",
                                "enum": [
                                    "IN_REVIEW",
                                    "SUBMITTED"
                                ],
                                "example": "SUBMITTED"
                            },
                            "workflowExecutionUUID": {
                                "type": "string",
                                "description": "Used by InfoEx client to associate observations with a workflow",
                                "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                            },
                            "shareLevel": {
                                "type": "string",
                                "description": "Share level of the observation",
                                "enum": [
                                    "EXCHANGE",
                                    "PRIVATE"
                                ],
                                "example": "PRIVATE"
                            },
                            "createUserUUID": {
                                "type": "string",
                                "description": "User UUID who created the observation",
                                "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                            },
                            "reviewUserUUID": {
                                "type": "string",
                                "description": "User UUID who reviewed the observation",
                                "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                            },
                            "submitUserUUID": {
                                "type": "string",
                                "description": "User UUID who submitted the observation",
                                "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                            },
                            "content": {
                                "type": "string"
                            },
                            "obTime": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "templateUUID": {
                                "type": "string"
                            },
                            "locationUUIDs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "operationUUID": {
                                "type": "string"
                            },
                            "uuid": {
                                "type": "string",
                                "description": "UUID of the observation - will be generated by the server if not provided",
                                "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                            }
                        }
                    }
                ],
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "FreeformLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "content": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "templateUUID": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "GeneralMessageLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "message": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "GeometryDTO": {
                "discriminator": {
                    "propertyName": "type"
                },
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "HazardRatingDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string"
                    },
                    "caamlGroupUUID": {
                        "type": "string"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "elevationBand": {
                        "type": "string"
                    },
                    "stabilityRating": {
                        "type": "string"
                    },
                    "stabilityConfidence": {
                        "type": "string"
                    },
                    "hazardRating": {
                        "type": "string"
                    },
                    "hazardConfidence": {
                        "type": "string"
                    },
                    "confidence": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "avProblemsImportance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvalancheProblemImportanceDTO"
                        }
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "assessmentType": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "avProblems": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "JsonNode": {},
            "LineDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeometryDTO"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "format": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "ObservationAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "generalMessages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GeneralMessageLightDTO"
                                }
                            },
                            "weathers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WeatherObservationLightDTO"
                                }
                            },
                            "swagWeathers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SwagWeatherObservationLightDTO"
                                }
                            },
                            "avalanches": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AvalancheObservationLightDTO"
                                }
                            },
                            "swagAvalanches": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SwagAvalancheObservationLightDTO"
                                }
                            },
                            "fieldSummaries": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FieldSummaryLightDTO"
                                }
                            },
                            "swagFieldSummaries": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SwagFieldSummaryLightDTO"
                                }
                            },
                            "avalancheSummaries": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AvalancheSummaryLightDTO"
                                }
                            },
                            "snowpacks": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SnowpackObservationLightDTO"
                                }
                            },
                            "routeControls": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RouteControlLightDTO"
                                }
                            },
                            "snowpackAssessments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SnowpackAssessmentLightDTO"
                                }
                            },
                            "terrains": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TerrainObservationLightDTO"
                                }
                            },
                            "freeforms": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FreeformLightDTO"
                                }
                            },
                            "workflowExecutionUUID": {
                                "type": "string",
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "PWLAssessmentLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string"
                    },
                    "shareLevel": {
                        "type": "string"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "assessTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "crystalType": {
                        "type": "string"
                    },
                    "crystalType2": {
                        "type": "string"
                    },
                    "depthMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "depthMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "aspectElevation": {
                        "type": "string"
                    },
                    "pwlUUID": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationGroupUUID": {
                        "type": "string"
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "PhotoOverlayDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Observation date in format yyyy/mm/dd",
                        "example": "2021/01/30"
                    },
                    "locationUUID": {
                        "type": "string",
                        "description": "Location UUID associated with overlay",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "photoUUID": {
                        "type": "string",
                        "description": "UUID of the photo attachment",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "operationUUID": {
                        "type": "string",
                        "description": "UUID of the operation associated with the overlay",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "observationUUID": {
                        "type": "string",
                        "description": "UUID of the observation associated with the overlay",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "overlay": {
                        "type": "string",
                        "description": "A JSON string representing overlay information with the following structure:\n\n- `user`: Object containing user details.\n   - `name`: (String) Name of the user.\n   - `uuid`: (String) Unique identifier for the user.\n- `color`: (String) Hexadecimal color code for the overlay.\n- `visible`: (Boolean) Indicates whether the overlay is visible.\n- `freeForms`: (Array) List of freeform elements.\n- `skiCuts`: (Array) List of ski cut elements.\n- `avalanches`: (Array) List of avalanche elements.\n- `points`: (Array) List of point objects, each with the following properties:\n   - `elementType`: (String) Type of the element (e.g., 'POINT').\n   - `id`: (String) Unique identifier for the point.\n   - `visible`: (Boolean) Visibility flag for the point.\n   - `size`: (Number) Size of the point.\n   - `x`: (Number) X-coordinate of the point on the image.\n   - `y`: (Number) Y-coordinate of the point on the image.\n   - `label`: (String) Optional label for the point.\n- `notes`: (Array) List of notes related to the overlay.\n- `areFreeformsVisible`: (Boolean) Visibility flag for freeform elements.\n- `areSkiCutsVisible`: (Boolean) Visibility flag for ski cut elements.\n- `areAvalanchesVisible`: (Boolean) Visibility flag for avalanche elements.\n- `arePointsVisible`: (Boolean) Visibility flag for points.\n- `areNotesVisible`: (Boolean) Visibility flag for notes.\n\n",
                        "example": [
                            {
                                "user": {
                                    "name": "None",
                                    "uuid": "none"
                                },
                                "color": "#fc5353",
                                "visible": true,
                                "freeForms": [],
                                "skiCuts": [],
                                "avalanches": [],
                                "points": [
                                    {
                                        "elementType": "POINT",
                                        "id": "44cb22d1-7c9b-4638-a04b-5f11325298a7",
                                        "visible": true,
                                        "size": 20,
                                        "x": 311.5585587495888,
                                        "y": 116.55866320734592,
                                        "label": "2024-03-13 test pit"
                                    }
                                ],
                                "notes": [],
                                "areFreeformsVisible": true,
                                "areSkiCutsVisible": true,
                                "areAvalanchesVisible": true,
                                "arePointsVisible": true,
                                "areNotesVisible": true
                            }
                        ]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Is the overlay deleted",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    "obType": {
                        "type": "string",
                        "description": "Type of observations associated with overlay",
                        "enum": [
                            "avalanche",
                            "snowpack",
                            "swagAvalanche"
                        ]
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "PointDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeometryDTO"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    }
                ]
            },
            "PolygonDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GeometryDTO"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "double"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "RouteControlLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "numShots": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "controlTeam": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blasterOfRecord": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "forecastedSize": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "controlTeamString": {
                        "type": "string"
                    },
                    "blasterOfRecordString": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "RunStatusAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "runList": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RunStatusLightDTO"
                                }
                            }
                        }
                    }
                ]
            },
            "RunStatusLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "statusUUID": {
                        "type": "string"
                    },
                    "runListStatus": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "colour": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "SnowpackAggregateDTO": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkflowAggregationStep"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "summary": {
                                "$ref": "#/components/schemas/SnowpackAssessmentLightDTO"
                            },
                            "pwls": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PWLAssessmentLightDTO"
                                }
                            }
                        }
                    }
                ]
            },
            "SnowpackAssessmentLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "snowpackSummary": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "SnowpackObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "aspectElevation": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "pwlUUID": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pwlNames": {
                        "type": "string"
                    },
                    "exactLocations": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "photoOverlays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhotoOverlayDTO"
                        },
                        "uniqueItems": true
                    },
                    "observers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "aspect": {
                        "type": "string"
                    },
                    "slopeIncline": {
                        "type": "number",
                        "format": "double"
                    },
                    "footPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "airTemp": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowProfile": {
                        "$ref": "#/components/schemas/JsonNode"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "observersString": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "SwagAvalancheObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "photoOverlays": {
                        "type": "array",
                        "description": "Photo Overlays associated with the avalanche observation",
                        "items": {
                            "$ref": "#/components/schemas/PhotoOverlayDTO"
                        },
                        "uniqueItems": true
                    },
                    "blasterOfRecord": {
                        "type": "string",
                        "description": "Blaster of Record User UUID",
                        "example": "350dd41b-c2e0-44ec-9194-0328f46206e0"
                    },
                    "blasterOfRecordString": {
                        "type": "string",
                        "description": "Blaster of Record Full Name (read-only)",
                        "example": "John Doe",
                        "readOnly": true
                    },
                    "shotLocation": {
                        "type": "string",
                        "description": "Shot Location description",
                        "enum": [
                            "B",
                            "M",
                            "T",
                            "U"
                        ]
                    },
                    "routeControl": {
                        "type": "boolean",
                        "description": "If this is an Avalanche Control observation. Used primarily by InfoEx client."
                    },
                    "controlRouteUUID": {
                        "type": "string",
                        "description": "If this is an Avalanche Control observation, the uuid of the control route. Used primarily by InfoEx client."
                    },
                    "occurrenceTime": {
                        "type": "string",
                        "description": "Occurrence Time",
                        "enum": [
                            "Observed",
                            "The avalanche was observed in motion on the observation date and time",
                            "The avalanche occurred in the 12 hours before the observation date and time",
                            "The avalanche occurred between 12 and 24 hours before the observation date and time",
                            "The avalanche occurred between 24 and 48 hours before the observation date and time",
                            "The avalanche occurred between 48 and 72 hours before the observation date and time",
                            "The avalanche occurred more than 72 hours before the observation date and time"
                        ]
                    },
                    "occurrenceTimezone": {
                        "type": "string",
                        "description": "TimeZone of occurrence",
                        "example": "America/Edmonton"
                    },
                    "occurrenceFromDateTime": {
                        "type": "string",
                        "description": "Ocurrence Time Range Start - format MM/dd/yyyy HH:mm:ss",
                        "example": "01/30/2021 13:00:00"
                    },
                    "occurrenceToDateTime": {
                        "type": "string",
                        "description": "Ocurrence Time Range End - format MM/dd/yyyy HH:mm:ss",
                        "example": "01/30/2021 13:05:00"
                    },
                    "explosivesCharges": {
                        "type": "array",
                        "description": "Explosives Charges used",
                        "items": {
                            "$ref": "#/components/schemas/ExplosivesChargeDto"
                        }
                    },
                    "shotPlacement": {
                        "type": "string",
                        "description": "UUID of Shot Placement location that is referenced in the location catalog"
                    },
                    "reportedDate": {
                        "type": "string"
                    },
                    "exactLocations": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "obInterval": {
                        "type": "string"
                    },
                    "num": {
                        "type": "string"
                    },
                    "destSizeMin": {
                        "type": "string"
                    },
                    "destSizeMax": {
                        "type": "string"
                    },
                    "relSizeMin": {
                        "type": "string"
                    },
                    "relSizeMax": {
                        "type": "string"
                    },
                    "waterContentStartingZone": {
                        "type": "string"
                    },
                    "waterContentDeposit": {
                        "type": "string"
                    },
                    "trigger": {
                        "type": "string"
                    },
                    "triggerMod": {
                        "type": "string"
                    },
                    "triggerDistance": {
                        "type": "number",
                        "format": "double"
                    },
                    "triggerDistanceUnit": {
                        "type": "string"
                    },
                    "character": {
                        "type": "string"
                    },
                    "pwlName": {
                        "type": "string"
                    },
                    "aspectFrom": {
                        "type": "string"
                    },
                    "aspectTo": {
                        "type": "string"
                    },
                    "elevationMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMinUnit": {
                        "type": "string"
                    },
                    "elevationAvg": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationAvgUnit": {
                        "type": "string"
                    },
                    "elevationMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMaxUnit": {
                        "type": "string"
                    },
                    "inclineMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "inclineMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "inclineAvg": {
                        "type": "number",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "format": "double"
                    },
                    "widthUnit": {
                        "type": "string"
                    },
                    "widthAvg": {
                        "type": "number",
                        "format": "double"
                    },
                    "widthAvgUnit": {
                        "type": "string"
                    },
                    "widthEstimated": {
                        "type": "boolean"
                    },
                    "depthMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "depthMinUnit": {
                        "type": "string"
                    },
                    "depthMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "depthMaxUnit": {
                        "type": "string"
                    },
                    "depthAvg": {
                        "type": "number",
                        "format": "double"
                    },
                    "depthAvgUnit": {
                        "type": "string"
                    },
                    "depthEstimated": {
                        "type": "boolean"
                    },
                    "length": {
                        "type": "number",
                        "format": "double"
                    },
                    "lengthUnit": {
                        "type": "string"
                    },
                    "lengthAvg": {
                        "type": "number",
                        "format": "double"
                    },
                    "lengthAvgUnit": {
                        "type": "string"
                    },
                    "lengthEstimated": {
                        "type": "boolean"
                    },
                    "grainForm": {
                        "type": "string"
                    },
                    "grainFormRimed": {
                        "type": "string"
                    },
                    "grainFormMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "grainFormMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "bedSurfaceLevel": {
                        "type": "string"
                    },
                    "bedSurfaceType": {
                        "type": "string"
                    },
                    "bedSurfaceRimed": {
                        "type": "string"
                    },
                    "bedSurfaceSizeMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "bedSurfaceSizeMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowFailureType": {
                        "type": "string"
                    },
                    "snowFailureSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "ageRangeFrom": {
                        "type": "string"
                    },
                    "ageRangeTo": {
                        "type": "string"
                    },
                    "widthMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "widthMaxUnit": {
                        "type": "string"
                    },
                    "lengthMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "lengthMaxUnit": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "numExplosiveCharges": {
                        "type": "number",
                        "format": "double"
                    },
                    "sizeOfCharges": {
                        "type": "number",
                        "format": "double"
                    },
                    "terminus": {
                        "type": "string"
                    },
                    "depositOnRoadRail": {
                        "type": "number",
                        "format": "double"
                    },
                    "depositOnRoadRailUnit": {
                        "type": "string"
                    },
                    "distanceToToeDepositedMass": {
                        "type": "number",
                        "format": "double"
                    },
                    "distanceToToeDepositedMassUnit": {
                        "type": "string"
                    },
                    "aspectElevation": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "controlTeamUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "ageRange": {
                        "type": "string"
                    },
                    "destSize": {
                        "type": "string"
                    },
                    "relSize": {
                        "type": "string"
                    },
                    "trig": {
                        "type": "string"
                    },
                    "incline": {
                        "type": "string"
                    },
                    "aspect": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "string"
                    },
                    "depth": {
                        "type": "string"
                    },
                    "widthSummary": {
                        "type": "string"
                    },
                    "lengthSummary": {
                        "type": "string"
                    },
                    "bedSurface": {
                        "type": "string"
                    },
                    "failurePlane": {
                        "type": "string"
                    },
                    "controlTeamString": {
                        "type": "string"
                    },
                    "occurrenceTimeAbbreviation": {
                        "type": "string",
                        "description": "Time Occurred (Abbreviated)",
                        "enum": [
                            "Observed",
                            "0-12 hrs",
                            "12-24 hrs",
                            "24-48 hrs",
                            "48-72 hrs",
                            "72+ hrs"
                        ],
                        "readOnly": true
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "pwlUUID": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "SwagFieldSummaryLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "obStartTime": {
                        "type": "string"
                    },
                    "obEndTime": {
                        "type": "string"
                    },
                    "tempHigh": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempHighUnit": {
                        "type": "string"
                    },
                    "tempLow": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempLowUnit": {
                        "type": "string"
                    },
                    "elevationMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMinUnit": {
                        "type": "string"
                    },
                    "elevationMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevationMaxUnit": {
                        "type": "string"
                    },
                    "amSky": {
                        "type": "string"
                    },
                    "amVfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "amVfTopUnit": {
                        "type": "string"
                    },
                    "amVfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "amVfBottomUnit": {
                        "type": "string"
                    },
                    "amPrecip": {
                        "type": "string"
                    },
                    "amSurfaceForm": {
                        "type": "string"
                    },
                    "amSurfaceRimed": {
                        "type": "string"
                    },
                    "amSurfaceAvgSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "amSurfaceMaxSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "amWindSpeed": {
                        "type": "string"
                    },
                    "amWindDirection": {
                        "type": "string"
                    },
                    "amSnowExtent": {
                        "type": "string"
                    },
                    "amSnowDirection": {
                        "type": "string"
                    },
                    "pmSky": {
                        "type": "string"
                    },
                    "pmVfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmVfTopUnit": {
                        "type": "string"
                    },
                    "pmVfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmVfBottomUnit": {
                        "type": "string"
                    },
                    "pmPrecip": {
                        "type": "string"
                    },
                    "pmSurfaceForm": {
                        "type": "string"
                    },
                    "pmSurfaceRimed": {
                        "type": "string"
                    },
                    "pmSurfaceAvgSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmSurfaceMaxSize": {
                        "type": "number",
                        "format": "double"
                    },
                    "pmWindSpeed": {
                        "type": "string"
                    },
                    "pmWindDirection": {
                        "type": "string"
                    },
                    "pmSnowExtent": {
                        "type": "string"
                    },
                    "pmSnowDirection": {
                        "type": "string"
                    },
                    "hn24": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24Unit": {
                        "type": "string"
                    },
                    "we": {
                        "type": "number",
                        "format": "double"
                    },
                    "weUnit": {
                        "type": "string"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsUnit": {
                        "type": "string"
                    },
                    "hst": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstUnit": {
                        "type": "string"
                    },
                    "hstw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstwUnit": {
                        "type": "string"
                    },
                    "hstClearedDate": {
                        "type": "string"
                    },
                    "hstClearedTime": {
                        "type": "string"
                    },
                    "hsComment": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "string"
                    },
                    "temp": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "snowExtent": {
                        "type": "string"
                    },
                    "snowDirection": {
                        "type": "string"
                    },
                    "surfaceForms": {
                        "type": "string"
                    },
                    "wind": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "SwagWeatherObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "obInterval": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "vfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "vfTopUnit": {
                        "type": "string"
                    },
                    "vfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "vfBottomUnit": {
                        "type": "string"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "rainfall": {
                        "type": "number",
                        "format": "double"
                    },
                    "rainfallUnit": {
                        "type": "string"
                    },
                    "rainfallManual": {
                        "type": "boolean"
                    },
                    "precipitation": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationUnit": {
                        "type": "string"
                    },
                    "tempMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMaxUnit": {
                        "type": "string"
                    },
                    "tempMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMinUnit": {
                        "type": "string"
                    },
                    "tempPres": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempPresUnit": {
                        "type": "string"
                    },
                    "tempTrend": {
                        "type": "string"
                    },
                    "tempT8": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempT8Unit": {
                        "type": "string"
                    },
                    "footPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "footPenUnit": {
                        "type": "string"
                    },
                    "baro": {
                        "type": "number",
                        "format": "double"
                    },
                    "baroUnit": {
                        "type": "string"
                    },
                    "rh": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeedUnit": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "windDirectionNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowForm1": {
                        "type": "string"
                    },
                    "snowRimed1": {
                        "type": "string"
                    },
                    "snowMax1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowForm2": {
                        "type": "string"
                    },
                    "snowRimed2": {
                        "type": "string"
                    },
                    "snowMax2": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin2": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2d": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dUnit": {
                        "type": "string"
                    },
                    "h2dw": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dwUnit": {
                        "type": "string"
                    },
                    "h2dManual": {
                        "type": "boolean"
                    },
                    "h2dDensity": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24Unit": {
                        "type": "string"
                    },
                    "hn24w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24wUnit": {
                        "type": "string"
                    },
                    "hn24Manual": {
                        "type": "boolean"
                    },
                    "hn24Density": {
                        "type": "number",
                        "format": "double"
                    },
                    "hst": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstUnit": {
                        "type": "string"
                    },
                    "hstw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstwUnit": {
                        "type": "string"
                    },
                    "hstSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstSettlementUnit": {
                        "type": "string"
                    },
                    "hstManual": {
                        "type": "boolean"
                    },
                    "hstClearedDate": {
                        "type": "string"
                    },
                    "hstClearedTime": {
                        "type": "string"
                    },
                    "hsb": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbUnit": {
                        "type": "string"
                    },
                    "hsbw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbwUnit": {
                        "type": "string"
                    },
                    "hsbClearedDate": {
                        "type": "string"
                    },
                    "hsbClearedTime": {
                        "type": "string"
                    },
                    "hsb2": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2Unit": {
                        "type": "string"
                    },
                    "hsb2w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2wUnit": {
                        "type": "string"
                    },
                    "hsb2ClearedDate": {
                        "type": "string"
                    },
                    "hsb2ClearedTime": {
                        "type": "string"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsUnit": {
                        "type": "string"
                    },
                    "hsw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hswUnit": {
                        "type": "string"
                    },
                    "hsSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsSettlementUnit": {
                        "type": "string"
                    },
                    "hin": {
                        "type": "number",
                        "format": "double"
                    },
                    "hinUnit": {
                        "type": "string"
                    },
                    "hinw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hinwUnit": {
                        "type": "string"
                    },
                    "hit": {
                        "type": "number",
                        "format": "double"
                    },
                    "hitUnit": {
                        "type": "string"
                    },
                    "hitw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hitwUnit": {
                        "type": "string"
                    },
                    "hsManual": {
                        "type": "boolean"
                    },
                    "baroTrend": {
                        "type": "string"
                    },
                    "ramPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "blowingSnowExtent": {
                        "type": "string"
                    },
                    "blowingSnowDirection": {
                        "type": "string"
                    },
                    "blowingSnowComment": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "windGustSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windGustSpeedUnit": {
                        "type": "string"
                    },
                    "windGustDirNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPoint": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPointUnit": {
                        "type": "string"
                    },
                    "windRunN": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunS": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNW": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationInt": {
                        "type": "number",
                        "format": "double"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "valleyFog": {
                        "type": "string"
                    },
                    "surfaceForms": {
                        "type": "string"
                    },
                    "wind": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "TerrainObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "aspectElevation": {
                        "type": "string"
                    },
                    "terrainNarrative": {
                        "type": "string"
                    },
                    "atesRating": {
                        "type": "string"
                    },
                    "terrainFeature": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maxSlopeAngle": {
                        "type": "string"
                    },
                    "windExposure": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "restrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strategicMindset": {
                        "type": "string"
                    },
                    "percentAreaObserved": {
                        "type": "number",
                        "format": "double"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "WeatherObservationLightDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "obInterval": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "vfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "vfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "rainfall": {
                        "type": "number",
                        "format": "double"
                    },
                    "rainfallManual": {
                        "type": "boolean"
                    },
                    "precipitation": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempPres": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempTrend": {
                        "type": "string"
                    },
                    "tempT10": {
                        "type": "number",
                        "format": "double"
                    },
                    "footPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "baro": {
                        "type": "number",
                        "format": "double"
                    },
                    "rh": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeedUnit": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "windDirectionNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "blowingSnowExtent": {
                        "type": "string"
                    },
                    "blowingSnowDirection": {
                        "type": "string"
                    },
                    "blowingSnowComment": {
                        "type": "string"
                    },
                    "snowForm1": {
                        "type": "string"
                    },
                    "snowRimed1": {
                        "type": "string"
                    },
                    "snowMax1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowForm2": {
                        "type": "string"
                    },
                    "snowRimed2": {
                        "type": "string"
                    },
                    "snowMax2": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin2": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2d": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dw": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dManual": {
                        "type": "boolean"
                    },
                    "h2dDensity": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24Manual": {
                        "type": "boolean"
                    },
                    "hn24Density": {
                        "type": "number",
                        "format": "double"
                    },
                    "hst": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstManual": {
                        "type": "boolean"
                    },
                    "hstClearedDate": {
                        "type": "string"
                    },
                    "hstClearedTime": {
                        "type": "string"
                    },
                    "hsb": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbClearedDate": {
                        "type": "string"
                    },
                    "hsbClearedTime": {
                        "type": "string"
                    },
                    "hsb2": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2ClearedDate": {
                        "type": "string"
                    },
                    "hsb2ClearedTime": {
                        "type": "string"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hin": {
                        "type": "number",
                        "format": "double"
                    },
                    "hinw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hit": {
                        "type": "number",
                        "format": "double"
                    },
                    "hitw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsManual": {
                        "type": "boolean"
                    },
                    "baroTrend": {
                        "type": "string"
                    },
                    "ramPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "windGustSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windGustSpeedUnit": {
                        "type": "string"
                    },
                    "windGustDirNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPoint": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunN": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunS": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNW": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationInt": {
                        "type": "number",
                        "format": "double"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "valleyFog": {
                        "type": "string"
                    },
                    "surfaceForms": {
                        "type": "string"
                    },
                    "wind": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "WorkflowAggregationStep": {
                "discriminator": {
                    "propertyName": "$stepType"
                },
                "properties": {
                    "$stepType": {
                        "type": "string"
                    }
                },
                "required": [
                    "$stepType"
                ]
            },
            "WorkflowExecutionAggregateDTO": {
                "type": "object",
                "properties": {
                    "execution": {
                        "$ref": "#/components/schemas/WorkflowExecutionDTO"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AddHazardAssessmentAggregateDTO"
                                },
                                {
                                    "$ref": "#/components/schemas/AssessmentContextAggregateDTO"
                                },
                                {
                                    "$ref": "#/components/schemas/FreeformAggregateDTO"
                                },
                                {
                                    "$ref": "#/components/schemas/ObservationAggregateDTO"
                                },
                                {
                                    "$ref": "#/components/schemas/RunStatusAggregateDTO"
                                },
                                {
                                    "$ref": "#/components/schemas/SnowpackAggregateDTO"
                                }
                            ]
                        }
                    },
                    "emailPDF": {
                        "type": "boolean"
                    }
                }
            },
            "AssessmentContextDTO": {
                "type": "object",
                "properties": {
                    "character": {
                        "type": "string"
                    },
                    "assessmentDate": {
                        "type": "string"
                    },
                    "assessmentTime": {
                        "type": "string"
                    },
                    "validityDate": {
                        "type": "string"
                    },
                    "validityTime": {
                        "type": "string"
                    },
                    "usersPresent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workflowExecutionUUID": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "LocationDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "abbreviation": {
                        "type": "string"
                    },
                    "parentUUID": {
                        "type": "string"
                    },
                    "photos": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "geometry": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "operation": {
                        "$ref": "#/components/schemas/OperationDTO"
                    },
                    "mountainRangeUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mountainRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MountainRangeDTO"
                        }
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "MountainRangeDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "sortOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "abbreviation": {
                        "type": "string"
                    },
                    "geometry": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "PWLAssessmentDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string"
                    },
                    "shareLevel": {
                        "type": "string"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "assessTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "crystalType": {
                        "type": "string"
                    },
                    "crystalType2": {
                        "type": "string"
                    },
                    "depthMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "depthMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "aspectElevation": {
                        "type": "string"
                    },
                    "pwlUUID": {
                        "type": "string"
                    },
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locationGroupUUID": {
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationDTO"
                        }
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "PWLDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "communityPWLUUID": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "assessment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PWLAssessmentDTO"
                        }
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "AutoStationWeatherObservationDTO": {
                "type": "object",
                "properties": {
                    "weatherSiteUUID": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "obDate": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "tempMaxHour": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMaxHourUnit": {
                        "type": "string"
                    },
                    "tempMinHour": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMinHourUnit": {
                        "type": "string"
                    },
                    "precipitationGauge": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationGaugeUnit": {
                        "type": "string"
                    },
                    "windGustSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windGustSpeedNumUnit": {
                        "type": "string"
                    },
                    "windGustDirNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPoint": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPointUnit": {
                        "type": "string"
                    },
                    "hn24Auto": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24AutoUnit": {
                        "type": "string"
                    },
                    "hstAuto": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstAutoUnit": {
                        "type": "string"
                    },
                    "tempPres": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempPresUnit": {
                        "type": "string"
                    },
                    "baro": {
                        "type": "number",
                        "format": "double"
                    },
                    "baroUnit": {
                        "type": "string"
                    },
                    "rH": {
                        "type": "number",
                        "format": "double",
                        "writeOnly": true
                    },
                    "windSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeedUnit": {
                        "type": "string"
                    },
                    "windDirectionNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "hS": {
                        "type": "number",
                        "format": "double",
                        "writeOnly": true
                    },
                    "hsUnit": {
                        "type": "string"
                    },
                    "precipLastHour": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipLastHourUnit": {
                        "type": "string"
                    },
                    "precipSinceLastStdOb": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipSinceLastStdObUnit": {
                        "type": "string"
                    },
                    "hn24auto": {
                        "type": "number",
                        "format": "double",
                        "writeOnly": true
                    },
                    "rh": {
                        "type": "number",
                        "format": "double"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "HazardAssessmentDTO": {
                "type": "object",
                "properties": {
                    "locationUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "obDate": {
                        "type": "string"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "shareLevel": {
                        "type": "string"
                    },
                    "assessmentType": {
                        "type": "string"
                    },
                    "usersPresent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "avalancheProblems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvalancheProblemDTO"
                        }
                    },
                    "hazardRatings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HazardRatingDTO"
                        }
                    },
                    "problemImportanceMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            },
            "LocationGeometryDTO": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string"
                    },
                    "geometry": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    }
                }
            },
            "SwagWeatherObservationDTO": {
                "type": "object",
                "properties": {
                    "obDate": {
                        "type": "string",
                        "description": "Date of the Observation (yyyy/mm/dd)",
                        "example": "2021/01/30"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Files attached to the observation",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "uniqueItems": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the observation",
                        "enum": [
                            "IN_REVIEW",
                            "SUBMITTED"
                        ],
                        "example": "SUBMITTED"
                    },
                    "workflowExecutionUUID": {
                        "type": "string",
                        "description": "Used by InfoEx client to associate observations with a workflow",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "shareLevel": {
                        "type": "string",
                        "description": "Share level of the observation",
                        "enum": [
                            "EXCHANGE",
                            "PRIVATE"
                        ],
                        "example": "PRIVATE"
                    },
                    "createUserUUID": {
                        "type": "string",
                        "description": "User UUID who created the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "reviewUserUUID": {
                        "type": "string",
                        "description": "User UUID who reviewed the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "submitUserUUID": {
                        "type": "string",
                        "description": "User UUID who submitted the observation",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    },
                    "obTime": {
                        "type": "string"
                    },
                    "obInterval": {
                        "type": "string"
                    },
                    "sky": {
                        "type": "string"
                    },
                    "vfTop": {
                        "type": "number",
                        "format": "double"
                    },
                    "vfTopUnit": {
                        "type": "string"
                    },
                    "vfBottom": {
                        "type": "number",
                        "format": "double"
                    },
                    "vfBottomUnit": {
                        "type": "string"
                    },
                    "precip": {
                        "type": "string"
                    },
                    "rainfall": {
                        "type": "number",
                        "format": "double"
                    },
                    "rainfallUnit": {
                        "type": "string"
                    },
                    "rainfallManual": {
                        "type": "boolean"
                    },
                    "precipitation": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationUnit": {
                        "type": "string"
                    },
                    "tempMax": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMaxUnit": {
                        "type": "string"
                    },
                    "tempMin": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempMinUnit": {
                        "type": "string"
                    },
                    "tempPres": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempPresUnit": {
                        "type": "string"
                    },
                    "tempTrend": {
                        "type": "string"
                    },
                    "tempT8": {
                        "type": "number",
                        "format": "double"
                    },
                    "tempT8Unit": {
                        "type": "string"
                    },
                    "footPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "footPenUnit": {
                        "type": "string"
                    },
                    "baro": {
                        "type": "number",
                        "format": "double"
                    },
                    "baroUnit": {
                        "type": "string"
                    },
                    "rh": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeed": {
                        "type": "string"
                    },
                    "windSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windSpeedUnit": {
                        "type": "string"
                    },
                    "windDirection": {
                        "type": "string"
                    },
                    "windDirectionNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowForm1": {
                        "type": "string"
                    },
                    "snowRimed1": {
                        "type": "string"
                    },
                    "snowMax1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin1": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowForm2": {
                        "type": "string"
                    },
                    "snowRimed2": {
                        "type": "string"
                    },
                    "snowMax2": {
                        "type": "number",
                        "format": "double"
                    },
                    "snowMin2": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2d": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dUnit": {
                        "type": "string"
                    },
                    "h2dw": {
                        "type": "number",
                        "format": "double"
                    },
                    "h2dwUnit": {
                        "type": "string"
                    },
                    "h2dManual": {
                        "type": "boolean"
                    },
                    "h2dDensity": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24Unit": {
                        "type": "string"
                    },
                    "hn24w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hn24wUnit": {
                        "type": "string"
                    },
                    "hn24Manual": {
                        "type": "boolean"
                    },
                    "hn24Density": {
                        "type": "number",
                        "format": "double"
                    },
                    "hst": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstUnit": {
                        "type": "string"
                    },
                    "hstw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstwUnit": {
                        "type": "string"
                    },
                    "hstSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hstSettlementUnit": {
                        "type": "string"
                    },
                    "hstManual": {
                        "type": "boolean"
                    },
                    "hstClearedDate": {
                        "type": "string"
                    },
                    "hstClearedTime": {
                        "type": "string"
                    },
                    "hsb": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbUnit": {
                        "type": "string"
                    },
                    "hsbw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsbwUnit": {
                        "type": "string"
                    },
                    "hsbClearedDate": {
                        "type": "string"
                    },
                    "hsbClearedTime": {
                        "type": "string"
                    },
                    "hsb2": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2Unit": {
                        "type": "string"
                    },
                    "hsb2w": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsb2wUnit": {
                        "type": "string"
                    },
                    "hsb2ClearedDate": {
                        "type": "string"
                    },
                    "hsb2ClearedTime": {
                        "type": "string"
                    },
                    "hs": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsUnit": {
                        "type": "string"
                    },
                    "hsw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hswUnit": {
                        "type": "string"
                    },
                    "hsSettlement": {
                        "type": "number",
                        "format": "double"
                    },
                    "hsSettlementUnit": {
                        "type": "string"
                    },
                    "hin": {
                        "type": "number",
                        "format": "double"
                    },
                    "hinUnit": {
                        "type": "string"
                    },
                    "hinw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hinwUnit": {
                        "type": "string"
                    },
                    "hit": {
                        "type": "number",
                        "format": "double"
                    },
                    "hitUnit": {
                        "type": "string"
                    },
                    "hitw": {
                        "type": "number",
                        "format": "double"
                    },
                    "hitwUnit": {
                        "type": "string"
                    },
                    "hsManual": {
                        "type": "boolean"
                    },
                    "baroTrend": {
                        "type": "string"
                    },
                    "ramPen": {
                        "type": "number",
                        "format": "double"
                    },
                    "blowingSnowExtent": {
                        "type": "string"
                    },
                    "blowingSnowDirection": {
                        "type": "string"
                    },
                    "blowingSnowComment": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "windGustSpeedNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "windGustSpeedUnit": {
                        "type": "string"
                    },
                    "windGustDirNum": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPoint": {
                        "type": "number",
                        "format": "double"
                    },
                    "dewPointUnit": {
                        "type": "string"
                    },
                    "windRunN": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSE": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunS": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunSW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunW": {
                        "type": "number",
                        "format": "double"
                    },
                    "windRunNW": {
                        "type": "number",
                        "format": "double"
                    },
                    "precipitationInt": {
                        "type": "number",
                        "format": "double"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationDTO"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "UUID of the observation - will be generated by the server if not provided",
                        "example": "f1b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b"
                    }
                },
                "required": [
                    "obDate",
                    "state"
                ]
            },
            "FTPAccessDTO": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "ConstantsDTO": {
                "type": "object",
                "properties": {
                    "sky": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "precipitation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "swagPrecipitation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "terminus": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "windSpeed": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "C",
                                "L",
                                "M",
                                "S",
                                "X",
                                "V"
                            ]
                        }
                    },
                    "cardinalDirection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "VAR",
                                "N",
                                "NE",
                                "E",
                                "SE",
                                "S",
                                "SW",
                                "W",
                                "NW"
                            ]
                        }
                    },
                    "aspectDirection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "N",
                                "NE",
                                "E",
                                "SE",
                                "S",
                                "SW",
                                "W",
                                "NW",
                                "VAR",
                                "ALL"
                            ]
                        }
                    },
                    "snowForm": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PP",
                                "PPco",
                                "PPnd",
                                "PPpl",
                                "PPsd",
                                "PPir",
                                "PPgp",
                                "PPhl",
                                "PPip",
                                "PPrm",
                                "MM",
                                "MMrp",
                                "MMci",
                                "DF",
                                "DFdc",
                                "DFbk",
                                "RG",
                                "RGsr",
                                "RGlr",
                                "RGwp",
                                "RGxf",
                                "FC",
                                "FCso",
                                "FCsf",
                                "FCxr",
                                "DH",
                                "DHcp",
                                "DHpr",
                                "DHch",
                                "DHla",
                                "DHxr",
                                "SH",
                                "SHsu",
                                "SHcv",
                                "SHxr",
                                "MF",
                                "MFsc",
                                "MFrc",
                                "MFtc",
                                "MFcl",
                                "MFpc",
                                "MFsl",
                                "MFcr",
                                "IF",
                                "IFil",
                                "IFic",
                                "IFbi",
                                "IFrc",
                                "IFsc",
                                "CR",
                                "WG",
                                "IM"
                            ]
                        }
                    },
                    "blowingSnowExtent": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Nil",
                                "Prev",
                                "L",
                                "M",
                                "I",
                                "U"
                            ]
                        }
                    },
                    "trigger": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Na",
                                "Nc",
                                "Ne",
                                "Ni",
                                "Nr",
                                "Xa",
                                "Xb",
                                "Xc",
                                "Xd",
                                "Xe",
                                "Xg",
                                "Xh",
                                "Xhg",
                                "Xl",
                                "Xp",
                                "Xt",
                                "Xr",
                                "Xy",
                                "Ha",
                                "Hc",
                                "Hr",
                                "Hy",
                                "Va",
                                "Vc",
                                "Vr",
                                "Vy",
                                "Sa",
                                "Sc",
                                "Sr",
                                "Sy",
                                "Ma",
                                "Mc",
                                "Mr",
                                "My",
                                "O",
                                "U"
                            ]
                        }
                    },
                    "swagTrigger": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "N",
                                "NC",
                                "NE",
                                "NI",
                                "NL",
                                "NS",
                                "NR",
                                "NO",
                                "A",
                                "AA",
                                "AB",
                                "AC",
                                "AE",
                                "AF",
                                "AH",
                                "AI",
                                "AK",
                                "AL",
                                "AM",
                                "AO",
                                "AP",
                                "AR",
                                "AS",
                                "AU",
                                "AV",
                                "AX",
                                "U"
                            ]
                        }
                    },
                    "swagTriggerMod": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "c",
                                "u",
                                "r",
                                "y"
                            ]
                        }
                    },
                    "character": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "LOOSE_DRY_AVALANCHE",
                                "LOOSE_WET_AVALANCHE",
                                "STORM_SLAB",
                                "WIND_SLAB",
                                "PERSISTENT_SLAB",
                                "DEEP_PERSISTENT_SLAB",
                                "WET_SLAB",
                                "GLIDE",
                                "CORNICE",
                                "UNKNOWN"
                            ]
                        }
                    },
                    "snowFailure": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "S",
                                "L",
                                "LS",
                                "C",
                                "CS",
                                "I",
                                "IS",
                                "GS",
                                "U"
                            ]
                        }
                    },
                    "swagSnowFailure": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "L",
                                "WL",
                                "SS",
                                "HS",
                                "WS",
                                "I",
                                "SF",
                                "C",
                                "R",
                                "U"
                            ]
                        }
                    },
                    "bedSurfaceLevel": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "S",
                                "O",
                                "G",
                                "U"
                            ]
                        }
                    },
                    "swagBedSurfaceLevel": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "S",
                                "O",
                                "G",
                                "U",
                                "I"
                            ]
                        }
                    },
                    "bedSurfaceType": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PP",
                                "PPco",
                                "PPnd",
                                "PPpl",
                                "PPsd",
                                "PPir",
                                "PPgp",
                                "PPhl",
                                "PPip",
                                "PPrm",
                                "MM",
                                "MMrp",
                                "MMci",
                                "DF",
                                "DFdc",
                                "DFbk",
                                "RG",
                                "RGsr",
                                "RGlr",
                                "RGwp",
                                "RGxf",
                                "FC",
                                "FCso",
                                "FCsf",
                                "FCxr",
                                "DH",
                                "DHcp",
                                "DHpr",
                                "DHch",
                                "DHla",
                                "DHxr",
                                "SH",
                                "SHsu",
                                "SHcv",
                                "SHxr",
                                "MF",
                                "MFsc",
                                "MFrc",
                                "MFtc",
                                "MFcl",
                                "MFpc",
                                "MFsl",
                                "MFcr",
                                "IF",
                                "IFil",
                                "IFic",
                                "IFbi",
                                "IFrc",
                                "IFsc",
                                "CR",
                                "WG",
                                "IM"
                            ]
                        }
                    },
                    "waterContent": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "D",
                                "M",
                                "W",
                                "U"
                            ]
                        }
                    },
                    "maxSlopeAngle": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "atesRating": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Simple",
                                "Challenging",
                                "Complex"
                            ]
                        }
                    },
                    "terrainFeature": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "windExposure": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Sheltered",
                                "Lee",
                                "Windward",
                                "Scoured",
                                "Crossloaded"
                            ]
                        }
                    },
                    "restrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strategicMindset": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "trend": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "RR",
                                "R",
                                "S",
                                "F",
                                "FR"
                            ]
                        }
                    },
                    "mapLayerType": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "TILELAYER",
                                "STYLELAYER",
                                "WMS"
                            ]
                        }
                    },
                    "swagBlowingSnowExtent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "typicalSize": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "distribution": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Isolated",
                                "Specific",
                                "Widespread"
                            ]
                        }
                    },
                    "sensitivity": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Unreactive",
                                "Stubborn",
                                "Reactive",
                                "Touchy"
                            ]
                        }
                    },
                    "elevationBand": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "enum": [
                                "ALP",
                                "TL",
                                "BTL",
                                "ALL"
                            ]
                        }
                    },
                    "confidence": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Low",
                                "Moderate",
                                "High"
                            ]
                        }
                    },
                    "hazardRatingConstants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pwlConstants": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "enum": [
                                "Developing",
                                "Active",
                                "Dormant",
                                "Inactive"
                            ]
                        }
                    },
                    "failurePlane": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "avalanchesObserved": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assessmentType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hazardElevationBands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "LocationHierarchyDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "abbreviation": {
                        "type": "string"
                    },
                    "parentUUID": {
                        "type": "string"
                    },
                    "photos": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "geometry": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LineDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PointDTO"
                            },
                            {
                                "$ref": "#/components/schemas/PolygonDTO"
                            }
                        ]
                    },
                    "operationUUID": {
                        "type": "string"
                    },
                    "operation": {
                        "$ref": "#/components/schemas/OperationDTO"
                    },
                    "mountainRangeUUIDs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mountainRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MountainRangeDTO"
                        }
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationHierarchyDTO"
                        }
                    },
                    "uuid": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "APIKey": {
                "type": "apiKey",
                "description": "API Key for accessing the API",
                "name": "api_key",
                "in": "header"
            },
            "Operation": {
                "type": "apiKey",
                "description": "Operation UUID for the calling user",
                "name": "operation",
                "in": "header"
            }
        }
    }
}
